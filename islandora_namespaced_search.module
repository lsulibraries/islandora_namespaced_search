<?php
// This entire .module is ripped from islandora_collection_search.

// TODO: put this search in a block or sth that can be added to appropriate pages.
// Module currently exists in advanced search block...

function islandora_namespaced_search_islandora_solr_query($islandora_solr_query) {
  // Query param 'ns' gets set on form submission so that we can use it here.
  if(!isset($_GET['ns'])){
    return;
  }
  $namespaces = $_GET['ns'];
  foreach($namespaces as $inst){
    if($inst != '0'){
      $filter = format_string('!field:!value', array(
        '!field' => 'PID',
        '!value' => $inst,
      ));
  $islandora_solr_query->solrParams['fq'][] = $filter;
    }
  }
}

//how to update cache if new institution is added?
if('cache_file'){
 //dpm('cache extant');
}
else{
  //array flip occurs here.
  file_put_contents("cache_file", serialize(array_flip(get_all_collections_inst())));
}

function islandora_namespaced_search_form_islandora_solr_advanced_search_form_alter(&$form, &$form_state) {
  $ns_array = get_all_collections_inst();
  $pruned_ns = array();
  foreach($ns_array as $key => $value){
    $pruned_ns[$key] = $value;
  }
  $form['namespaces'] = array(
    '#title' => 'Search within institutions',
    '#type' => 'checkboxes',
    '#options' => array_flip($pruned_ns), //array_flip(get_all_collections_inst()), //unserialize(file_get_contents('cache_file')),
    '#weight' => 5,
  );
  $form['controls']['#weight'] = 6;
  // Gives us a chance to add 'ns' to the URL for use in altering the query (above).
  $form['#submit'][] = 'islandora_namespaced_search_append_ns';
}




function islandora_namespaced_search_append_ns($form, &$form_state) {
  // set the 'ns' query param to be fetched later from $_GET
  //we have to unpack the array of checkbox items here somehow...
  // right now I'm not convinced it can search multiple namespaces as OR, i think it is requiring that both be satisfied... eff
  if($form_state['values']['namespaces']['*'] == 0) {
    dpm('all keys to zero'); //not triggered even when if is satisfied
    $form_state['redirect'][1]['query']['ns'] = $form_state['values']['namespaces'];
  }
    dpm($form_state);
  
}


function get_all_collections_inst(){
  $connection = islandora_get_tuque_connection();
  if ($connection) {
    $query = <<<EOQ
  SELECT ?pid FROM <#ri>
  WHERE { 
    ?pid <fedora-rels-ext:isMemberOfCollection> <info:fedora/islandora:root>
  }
EOQ;
 $results = $connection->repository->ri->sparqlQuery($query);
  }
  $objects = array();
 foreach($results as $key => $value){
   $plode = explode('-', $results[$key]['pid']['value']);
   $objects[$plode[0]] =  $plode[0] . '*';
 }
 $objects['all'] = '*';
 return array_unique($objects);
}
